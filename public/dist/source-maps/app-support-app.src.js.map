{"version":3,"sources":["app.service.js","app.http.service.js","app.notification.js","app.directives.js","app.form.js","app-globals.js","file-uploader.service.js"],"names":[],"mappingspatnafile":"../Directives/app-support-app.src.js","sourcesContent":["(function() {\n'use strict';\n\n  angular.module('app.service', []).\n    service(\"appServices\", [\n        '$rootScope', '$state', 'appNotify', 'ngDialog','__DataStore', appServices ])\n\n    .service('BaseDataService', ['$rootScope', '$q', '$state', '__DataStore', 'appServices', '__Auth', function($rootScope, $q, $state, __DataStore, appServices, __Auth) {\n        /*\n         Get Subscriptions\n        -------------------------------------------------------------------------- */\n        this.getBaseData = function(userLoggedInState) {\n\n            var def = $q.defer(),\n            /* baseDataUrl = window.location.protocol+'//'+window.location.hostname;\n\n            if(window.location.hostname == 'localhost') {\n                baseDataUrl += (window.location.pathname).split('/public/')[0];\n            }\n\n            baseDataUrl += '/base-data'; */\n\n            baseDataUrl = window.appConfig.appBaseURL+'base-data';\n               \n            __DataStore.fetch(baseDataUrl)\n                .success(function(responseData) {\n\n                appServices.processResponse(responseData, null, function(reactionCode) {\n                    \n                    if(responseData.data.__appImmutables) {\n                        window.__appImmutables = responseData.data.__appImmutables;\n                        window.__appTemps = responseData.data.__appTemps;\n                        window.appConfig = responseData.data.appConfig;\n                        window.auth_info = responseData.data.auth_info;\n\n                        $rootScope.isBaseDataLoaded = true;\n                        \n                        $rootScope.$broadcast('auth_info_updated', { auth_info: window.auth_info });\n\n                        __Auth.refresh(function(authInfo) {\n                            $rootScope.auth_info = authInfo;\n                        });\n\n                        if(userLoggedInState == 'account_logged') {\n                            if(window.__appImmutables.auth_info.authorized == false) {\n                                $state.go('login');\n                                // return __globals.redirectBrowser(window.__appImmutables.auth_info.gateway_url);\n                            }\n                        }\n                    }\n\n                    def.resolve(responseData.data);\n\n                });\n\n            });\n\n             // Return the parentData promise\n            return def.promise;\n        };\n    }]);\n\n\n    /**\n      * Various App services.\n      *\n      *\n      * @inject $rootScope\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function appServices( $rootScope, $state, appNotify, ngDialog, __DataStore ) {\n\n\n    \t/**\n\t      * Delay action for particuler time\n\t      *\n\t      * @return object\n\t      *---------------------------------------------------------------- */\n\n\t    this.delayAction = function( callbackFunction, delayInitialLoading) {\n\n\t      var delayInitialLoading = (delayInitialLoading\n\t                                  && _.isNumber(delayInitialLoading) )\n\t                                  ? delayInitialLoading\n\t                                  : __globals.delayInitialLoading;\n\n\n\t        setTimeout(function(){\n\n\t            callbackFunction.call( this );\n\n\t      }, delayInitialLoading);\n\t    };\n\n\n        /**\n          * Actions on Response (improved version of doReact) - 03 Sep 2015\n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        this.processResponse = function( responseData, callback, successCallback ) {\n\n            var message,\n              preventRedirect,\n              preventRedirectOn,\n              options      = responseData.options,\n              reactionCode = responseData.reaction;\n\n            if (responseData.data && responseData.data.message) {\n                message = responseData.data.message;\n            }\n\n            if ( _.isString(options) ) {\n                message = options;\n            }\n\n            if ( _.isObject(options) && _.has(options, 'message')) {\n\n                message = options.message;\n\n                preventRedirect   =  options.preventRedirect ? options.preventRedirect : null;\n                preventRedirectOn =  options.preventRedirectOn ? options.preventRedirectOn : null;\n\n            }\n\n            if ( !options || !options.preventRedirect ) {\n\n                switch ( reactionCode ) {\n\n                    case 8:\n                        if( preventRedirectOn !== 8  ) {\n                          $state.go('not_found');\n                        }\n                        break;\n\n                    case 7:\n                        if( preventRedirectOn !== 7  ) {\n                          $state.go('invalid_request');\n                        }\n                        break;\n\n                    case 5:\n                    if( preventRedirectOn !== 5  ) {\n                          $state.go('unauthorized');\n                        }\n                        break;\n\n                    case 18:\n                        if( preventRedirectOn !== 18  ) {\n                          $state.go('not_exist');\n                        }\n                        break;\n\n                }\n            }\n\n\n            if ( message &&  ( reactionCode === 1 ) ) {\n\n              appNotify.success( message );\n\n            } else if( message &&  ( reactionCode === 14 ) ) {\n\n              appNotify.warn( message );\n\n            } else if( message &&  ( reactionCode != 1 ) ) {\n\n              appNotify.error( message );\n\n            }\n\n            var callBackReturn = {};\n\n            if (callback) {\n\n                if (_.isFunction(callback)) {\n\n                    callBackReturn.then =\n                            callback.call( this, reactionCode );\n\n                } else if(_.isObject(callback)) {\n\n                    if (_.has(callback, 'then') && _.isFunction(callback.then)) {\n                        callBackReturn.then =\n                            callback.then.call( this, reactionCode );\n                    }\n\n                    if (_.has(callback, 'error') && _.isFunction(callback.error)) {\n\n                        if (reactionCode === 2) {\n                            callBackReturn.error =\n                                callback.error.call(this, reactionCode);\n                        }\n                    }\n\n                    if (_.has(callback, 'success') && _.isFunction(callback.success)) {\n\n                        if (reactionCode === 1) {\n                            callBackReturn.success =\n                                callback.success.call(this, reactionCode);\n                        }\n                    }\n\n                    if (_.has(callback, 'otherError') && _.isFunction(callback.otherError)) {\n\n                        if (reactionCode !== 1) {\n                            callBackReturn.otherError =\n                                callback.otherError.call(this, reactionCode);\n                        }\n                    }\n\n                }\n\n            }\n\n            if (successCallback && _.isFunction(successCallback)) {\n\n                if (reactionCode === 1) {\n                    callBackReturn.success = successCallback.call(this, reactionCode);\n                }\n            }\n\n            return callBackReturn;\n\n        };\n\n\n        /**\n      \t  * Close all dialog\n      \t  *\n      \t  * @return void\n      \t  *---------------------------------------------------------------- */\n\n\t    this.closeAllDialog = function() {\n\t        ngDialog.closeAll();\n\t    };\n\n\t    /**\n\t      * Handle dialog show & close methods\n\t      *\n\t      * @param object transmitedData\n\t      * @param object options\n\t      * @param object closeCallback\n\t      *\n\t      * @return object\n\t      *---------------------------------------------------------------- */\n\n\t    this.showDialog = function( transmitedData, options , closeCallback ) {\n\n            var templateUrl;\n\n            if ((options.templateUrl.search(\"http\") >= 0) || (options.templateUrl.search(\"https\") >= 0)) {\n                templateUrl = options.templateUrl;\n            } else {\n                templateUrl = __globals.getTemplateURL(options.templateUrl);\n            }\n\n\t        return ngDialog.open({\n\n                template        : templateUrl,\n                controller      : options.controller,\n                controllerAs    : options.controllerAs,\n                closeByEscape   : true,\n                closeByDocument : true,\n                overlay         : true,\n                data            : transmitedData,\n                appendClassName : 'lw-dialog',\n                resolve         : options.resolve,\n                onOpenCallback : function(text) {\n                    /* var headerHeight = $(this).find('.modal-header').outerHeight();\n                    if(headerHeight > 70) {\n                        $(this).find('.modal-body').css({'padding-top':headerHeight+'px'});\n                    } */\n                }\n\n\t        }).closePromise.then(function ( data ) {\n\n\t            return closeCallback.call( this, data );\n\n\t        });\n\n\t    };\n\n        /**\n          * Handle Login required dialog show & close methods\n          *\n          * @param object string\n          * @param object callback\n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.loginRequiredDialog = function(from, options, callback) {\n\n            this.showDialog(\n            {\n                'from' : from\n            },\n            {\n                templateUrl : __globals.getTemplateURL('user.login-dialog')\n            },\n            function(promiseObj) {\n\t\t\t\t// __dd('login dialog Promise', promiseObj);\n                if (_.has(promiseObj.value, 'login_success')\n                    && promiseObj.value.login_success === true) {\n\n                    callback.call(this, true);\n\n                    $('.guest-user').css({\"display\": \"none\"});\n                }\n\n\t\t\t\tcallback.call(this, false);\n\n            });\n\n        };\n\n\t    /**\n\t      * Handle dialog show & close methods\n\t      *\n\t      * @param object options\n\t      * @param object closeCallback\n\t      *\n\t      * @return object\n\t      *---------------------------------------------------------------- */\n\n\t    this.confirmDialog = function( options , closeCallback ) {\n\n\t        return ngDialog.openConfirm({\n\n\t            template  : options.templateUrl,\n\t            className : 'ngdialog-theme-default',\n\t            showClose : true\n\n\t        }, function( value ) {\n\n\t            return closeCallback.call( this, value );\n\n\t        });\n\n        };\n\t\t\n\n\t \t/**\n          * Check if user allowed given authority ID permission of not\n          *\n          * @param string authorityId\n          *\n          * @return boolean\n          *---------------------------------------------------------------- */\n\n        $rootScope.canAccess = function(str) {\n\n\t\t\tvar arr = __globals.appImmutable('availableRoutes');\n\n\t        // If there are no items in the array, return an empty array\n\t        if(typeof arr === 'undefined' || arr.length === 0) return false;\n\t        // If the string is empty return all items in the array\n\t        if(typeof arr === 'str' || str.length === 0) return false;\n\n\t        // Create a new array to hold the results.\n\t        var res = [];\n\t     \n\t        // Check where the start (*) is in the string\n\t        var starIndex = str.indexOf('*');\n\t    \t\t\n\t        // If the star is the first character...\n\t        if(starIndex === 0) {\n\t            \n\t            // Get the string without the star.\n\t            str = str.substr(1);\n\t            for(var i = 0; i < arr.length; i++) {\n\t                \n\t                // Check if each item contains an indexOf function, if it doesn't it's not a (standard) string.\n\t                // It doesn't necessarily mean it IS a string either.\n\t                if(!arr[i].indexOf) continue;\n\t                \n\t                // Check if the string is at the end of each item.\n\t                if(arr[i].indexOf(str) === arr[i].length - str.length) {                    \n\t                    // If it is, add the item to the results.\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        // Otherwise, if the star is the last character\n\t        else if(starIndex === str.length - 1) {\n\t            // Get the string without the star.\n\t            str = str.substr(0, str.length - 1);\n\t            for(var i = 0; i < arr.length; i++){\n\t                // Check indexOf function                \n\t                if(!arr[i].indexOf) continue;\n\t                // Check if the string is at the beginning of each item\n\t                if(arr[i].indexOf(str) === 0) {\n\t                    // If it is, add the item to the results.\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        // In any other case...\n\t        else {            \n\t            for(var i = 0; i < arr.length; i++){\n\t                // Check indexOf function\n\t                if(!arr[i].indexOf) continue;\n\t                // Check if the string is anywhere in each item\n\t                if(arr[i].indexOf(str) !== -1) {\n\t                    // If it is, add the item to the results\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        \n\t        // Return the results as a new array.\n\t        return false;\n\n        };\n    }\n\n})();","(function() {\n'use strict';\n\n  angular.module('app.http', []).\n\n    // register the interceptor as a service, intercepts -\n    // all angular ajax http reuest called\n    config([ \n      '$httpProvider', \n      function ($httpProvider) {\n\n        $httpProvider.interceptors.push('errorInterceptor');\n        var proccessSubmit = function (data, headersGetter) {\n\n           return data;\n\n        };\n\n        $httpProvider.defaults.transformRequest.push( proccessSubmit );\n        $httpProvider.interceptors.push('loadingHttpInterceptor');\n    }]).\n    factory('errorInterceptor', [ \n      \t'$q',\n      \t'__Auth',\n      \t'__Utils',\n      \t'$rootScope',\n    \t\t'$state',\n        '$window',\n      \terrorInterceptor\n    ]). \n    factory('loadingHttpInterceptor', [\n        '$q',\n        '$rootScope', function($q, $rootScope) {\n      return {\n        request: function(config) {\n\n\n          $('.lw-disabling-block').addClass('lw-disabled-block');\n          $('html').addClass('lw-has-disabled-block');\n          return config || $q.when(config);\n        },\n        response: function(response) {\n\n            $('.lw-disabling-block').removeClass('lw-disabled-block lw-has-processing-window');\n            $('html').removeClass('lw-has-disabled-block');\n            return response || $q.when(response);\n\n        },\n        responseError: function(rejection) {\n            $('.lw-disabling-block').removeClass('lw-disabled-block lw-has-processing-window');\n            $('html').removeClass('lw-has-disabled-block');\n\n          return $q.reject(rejection);\n        }\n      };\n}]);\n\n  \n  /**\n   * errorInterceptor factory.\n   * \n   * Make a response for all http request\n   *\n   * @inject $q - for return promise\n   * @inject __Auth - for set authentication object\n   * @inject $location - for redirect on another page\n   *\n   * @return void\n   *-------------------------------------------------------- */\n   \n  function errorInterceptor($q, __Auth, __Utils, $rootScope, $state, $window) {\n\n\t\tvar isNotificationRequest = false;\n\n      \treturn {\n\n          request: function (config) {\n\n            return config || $q.when(config);\n\n          },\n          requestError: function( request ) {\n\t\t\t \n              return request;\n\n          },\n          response: function ( response ) {\n\n           var requestData = response.data,\n            publicApp   = __globals.isPublicApp();\n\t\n      try {\n\t\t\t\tif (_.isObject(requestData)) {\n\n\t\t\t\t\t// If is Public App & Server return Not foun Reaction Then Redirect on Not Found Page\n\t\t            if (publicApp == true && requestData.reaction == 18) {\n\n\t\t            \t$state.go('not_exist');\n\t\t                //window.location = __Utils.apiURL('error.public-not-found');\n\t\t            }\n\t\t\t\t\t\n\t\t\t\t\tvar additional  = requestData.data.additional,\n\t\t\t\t\t\tnewResponse = requestData.data,\n\t\t\t\t\t\tparams = [];\t\n\t\t\t\t\n\t\t\t\t\t\tif ($state.params) {\n\n\t\t\t\t\t\t\t_.each($state.params, function(val, key) {\n\n\t\t\t\t\t\t\t\tif (key != '#' && !_.isNull(val))\n\t\t\t\t\t\t\t\tparams[key] = val;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n  \n\t\t\t\t\tif (_.has(newResponse, 'auth_info')) {\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar authObj       = newResponse.auth_info,\n            \t\t\t\treactionCode  = authObj.reaction_code;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t__Auth.checkIn(authObj, function() {\n\t\t\t\t\t\t\n\t\t                    switch (reactionCode) {\n\n\t\t\t                    case 11:  // access denied\n\t\t                            // Check if current app is public the redirect to Home View\n\t\t                            $state.go(\"unauthorized\");\n\n\t\t\t                        break;\n\n\t\t\t                    case 9:  // if unauthorized\n\t\n\t\t                            // Check if current app is public the redirect to Login View\n  \t\t\t\t\t\t\t\t\t//It Open when tit unauthenticated & also is not notification request\n  \t\t\t\t\t\t\t\t\t__Auth.registerIntended( {\n  \t\t                                name    : $state.current.name,\n  \t\t                                params  : params,\n  \t\t                                except  : [ 'login', 'logout', 'reset_password']\n  \t\t                            }, function() {\n  \t\t\t\t\t\t\t\t\t\t$state.go('login');\n  \t\t\t\t\t\t\t\t\t}); \n\t\t\t\t\t\t\t\t\t\n\t\t\t                        break;\n\n\t\t\t                    case 6:  // if invalid request                        \n\t\t\t                        $state.go(\"invalid_request\");\n\n\t\t\t                        break;\n\n\t\t\t                    case 10:  \n                                        // $state.go(\"dashboard\");\n                                        // if($tate.current.name == 'forgot_password') {\n                                        //     $state.go(\"dashboard\");\n                                        // }\n                                        if (__Auth.isLoggedIn()) {\n    \t\t\t                        \t__Auth.registerIntended(\"project\");             \n                                        } else {\n                                        \t$state.go(\"project\");\n                                        }\n    \t\t\t\t\t\t\t\t\t\n\t\t\t                        break;\n\n\t\t                    }\n\n\t\t                });\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} catch(error) {}\n\t\t\t\n            return response || $q.reject(response);\n            \n          },\n          responseError: function ( response ) {\n\t\t\n            if (response.status == 403 ) {\n              return;\n            }\n\n            return $q.reject(response);\n\n          }\n\n      };\n\n  };\n\n})();","(function() {\n'use strict';\n\n  angular.module('app.notification', [])\n\t.service(\"appNotify\", ['ngNotify', appNotify ])\n\t.service(\"appToastNotify\", appToastNotify);\n\n  \n  /**\n     * appNotify service.\n     *\n     * Show notification\n     *\n     * @inject ngNotify\n     *\n     * @return object\n     *-------------------------------------------------------- */\n   \n  function appNotify( ngNotify ) {\n\n\n      /*\n       Notification Default Option Object\n      -------------------------------------------------------------------------- */\n      \n      this.optionsObj = {\n        position      : 'botttom',\n        type          : 'success',\n        theme         : 'pure',\n        dismissQueue  : true,\n        duration      : 3000,\n        sticky        : false\n      };\n\n      /**\n        * Show success notification message\n        *\n        * @param string - message\n        * @param object - options  \n        *\n        * @return object\n        *---------------------------------------------------------------- */\n\n      this.success  =  function( message, options ) {\n\n          if ( _.isEmpty( options ) ) {  // Check for if options empty\n              var options = {};\n          }\n\n          options.type = 'success';\n\n          this.notify( message, options );\n\n      };\n\n        /**\n          * Show error notification message\n          *\n          * @param string - message\n          * @param object - options \n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.error  =  function( message, options ) {\n\n            if ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'error';\n\n            this.notify( message, options );\n\n        };\n\n        /**\n          * Show information notification message\n          *\n          * @param string - message\n          * @param object - options  \n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.info  =  function( message, options ) {\n\n            if ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'info';\n\n            this.notify( message, options );\n\n        };\n\n        /**\n          * Show warning notification message\n          *\n          * @param string - message\n          * @param object - options  \n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.warn  =  function( message, options ) {\n\n            if ( _.isEmpty( options ) ) {  // Check for if options empty\n                  var options = {};\n            }\n\n            options.type = 'warn';\n\n            this.notify( message, options );\n\n        };\n\n        /**\n          * Show notification\n          *\n          * @param string msg\n          * @param object options\n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        this.notify = function( message, options ) {\n          \n            // show notification\n            ngNotify.set( message, _.assign( this.optionsObj, options ) );\n\n        };\n      \n  };\n\n\t/**\n     * appNotify service.\n     *\n     * Show notification\n     *\n     * @return object\n     *-------------------------------------------------------- */\n   \n  \tfunction appToastNotify() {\n\n\n\t\t/*\n\t\tNotification Default Option Object\n\t\t-------------------------------------------------------------------------- */\n\n\t\tthis.optionsObj = {\n\t\t\tstyling: 'fontawesome',\n\t\t\twidth  : 'auto',\n\t\t\tdesktop:true,\n\t\t\thide: false,\n\t\t\ticon : false,\n\t\t\thistory: {\n        \t\thistory: false\n    \t\t},\n\t\t\tbuttons: {\n\t\t        closer  : false,\n\t\t        sticker : false\n\t\t    },\n\t\t\tanimate: {\n\t\t        animate   : true,\n\t\t        in_class  : 'fadeInRight',\n\t\t        out_class : 'fadeOutRight'\n\t\t    }\n\t\t};\n\n\t\t/**\n\t    * Show success notification message\n\t    *\n\t    * @param string - message\n\t    * @param object - options  \n\t    *\n\t    * @return object\n\t    *---------------------------------------------------------------- */\n\n\t  \tthis.success  =  function( message, options ) {\n\n\t\t\tif ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'success';\n\n\t\t\tif (!_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, {\n\t\t\t\t\ttext : message\n\t\t\t\t});\n\n\t\t\t} else if(_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, message );\n\t\t\t}\n\n\t\t\tvar notice = new PNotify( _.assign( this.optionsObj, options ));\n\n\t\t\tnotice.get().click(function() {\n\t\t\t    notice.remove();\n\t\t\t});\n\n\t  \t};\n\n\t\t/**\n\t    * Show success notification message\n\t    *\n\t    * @param string - message\n\t    * @param object - options  \n\t    *\n\t    * @return object\n\t    *---------------------------------------------------------------- */\n\n\t  \tthis.error  =  function( message, options ) {\n\n\t\t\tif ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'danger';\n\n\t\t\tif (!_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, {\n\t\t\t\t\ttext : message\n\t\t\t\t});\n\n\t\t\t} else if(_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, message );\n\t\t\t}\n\n\t\t\tvar notice = new PNotify( _.assign( this.optionsObj, options ));\n\n\t\t\tnotice.get().click(function() {\n\t\t\t    notice.remove();\n\t\t\t});\n\n\t  \t};\n\n\t\t/**\n\t    * Show success notification message\n\t    *\n\t    * @param string - message\n\t    * @param object - options  \n\t    *\n\t    * @return object\n\t    *---------------------------------------------------------------- */\n\n\t  \tthis.warn  =  function( message, options ) {\n\n\t\t\tif ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'warning';\n\n\t\t\tif (!_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, {\n\t\t\t\t\ttext : message\n\t\t\t\t});\n\n\t\t\t} else if(_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, message );\n\t\t\t}\n\n\t\t\tvar notice = new PNotify( _.assign( this.optionsObj, options ));\n\n\t\t\tnotice.get().click(function() {\n\t\t\t    notice.remove();\n\t\t\t});\n\n\t  \t};\n\n\n\t\t/**\n\t    * Show success notification message\n\t    *\n\t    * @param string - message\n\t    * @param object - options  \n\t    *\n\t    * @return object\n\t    *---------------------------------------------------------------- */\n\n\t  \tthis.info  =  function( message, options ) {\n\n\t\t\tif ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'info';\n\n\t\t\tif (!_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, {\n\t\t\t\t\ttext : message\n\t\t\t\t});\n\n\t\t\t} else if(_.isObject(message)) {\n\n\t\t\t\t_.assign( this.optionsObj, message );\n\t\t\t}\n\n\t\t\tvar notice = new PNotify( _.assign( this.optionsObj, options ));\n\n\t\t\tnotice.get().click(function() {\n\t\t\t    notice.remove();\n\t\t\t});\n\t  \t};\n      \n  \t};\n\n})();","(function () {\n    'use strict';\n\n    angular.module('app.directives', [])\n        .directive(\"lwColorPicker\", lwColorPicker)\n        .directive(\"lwPopover\", lwPopover)\n        .directive('lwDatePicker', [\n            '__Utils', '$compile', lwDatePicker\n        ])\n        .directive('lwEditor', ['__Utils', '$q', lwEditor])\n        .directive('lwFilterList', ['$timeout', function ($timeout) {\n            return {\n                link: function (scope, element, attrs) {\n\n                    var li = Array.prototype.slice.call(element[0].children),\n                        searchTerm = attrs.lwFilterList;\n\n                    function filterBy(value) {\n\n                        li.forEach(function (el) {\n\n                            var $ele = $(el),\n                                searchTags = $ele.attr('data-tags'),\n                                existClass = $ele.attr('class');\n\n                            existClass = existClass.replace('ng-hide', '');\n\n                            el.className = searchTags.toLowerCase().indexOf(value.toLowerCase()) !== -1 ? existClass : existClass + ' ng-hide';\n\n                        });\n\n                    }\n\n                    scope.$watch(attrs.lwFilterList, function (newVal, oldVal) {\n                        if (newVal !== oldVal) {\n                            filterBy(newVal);\n                        }\n                    });\n\n                }\n            };\n        }]);\n\n    /**\n     * Custom directive for falt picker\n     *\n     * @return void\n     *---------------------------------------------------------------- */\n\n    function lwDatePicker(__Utils, $compile) {\n\n        return {\n            restrict: 'A',\n            replace: false,\n            require: '?ngModel',\n            scope: {\n                setmindate: '='\n            },\n            link: function (scope, elem, attrs, ctrls) {\n\n                var datePickerOp = {\n                    clearButton: false,\n                    closeButton: true,\n                    enableTime: false,\n                    dateFormat: \"Y-m-d\", // Displays: 2017-01-22Z\n                    onReady: function (selectedDates, dateStr, instance) {\n\n                        instance.setDate(ctrls.$modelValue);\n\n                    },\n                    onOpen: [\n                        function (selectedDates, dateStr, instance) {\n\n                            var isPresentNewMinDate = (_.has(scope, 'setmindate') && !_.isUndefined(scope.setmindate));\n\n                            if (isPresentNewMinDate) { // if setmindate is on\n                                instance.set({ minDate: scope.setmindate });\n                            }\n\n                            instance.setDate(dateStr);\n\n                            var $cal = angular.element(instance.calendarContainer);\n\n                            if ($cal.find('.flatpickr-action').length < 1) {\n\n                                $cal.append($compile(__Utils.template('#lwFlatpickrAction', {\n                                    pickerOptions: datePickerOp\n                                }))(scope));\n\n                                $cal.find('.flatpickr-clear').on('click', function () {\n                                    instance.clear();\n                                });\n\n                                $cal.find('.flatpickr-close').on('click', function () {\n                                    instance.close();\n                                });\n\n                            }\n                        }\n                    ]\n\n                };\n\n                if (attrs.options) {\n                    _.assign(datePickerOp,\n                        eval('(' + attrs.options + ')')\n                    );\n                }\n\n                _.delay(function () {\n                    angular.element(elem).flatpickr(datePickerOp);\n                }, 500);\n            }\n\n        }\n    };\n\n\n    /**\n    * lwColorPicker Directive.\n    *\n    * For apply jquery color box property on element\n    *\n    * @return void\n    *-------------------------------------------------------- */\n    function lwColorPicker() {\n\n        return {\n            restrict: 'A',\n            scope: {\n                ngModel: \"=\"\n            },\n            link: function (scope, element, attrs) {\n\n                element.click(function (e) {\n\n                    e.preventDefault();\n\n                    $(element).colpick({\n                        flat: false,\n                        layout: 'hex',\n                        submit: true,\n                        onChange: function (hsb, hex, rgb, el, bySetColor) {\n                            // Fill the text box just if the color was set using the picker, and not the colpickSetColor function.\n\n                            scope.$evalAsync(function () {\n                                scope.ngModel = hex;\n                                if (el.id == 'logo_background_color') {\n                                    $('#lwchangeBgHeaderColor').css('background', \"#\" + hex);\n                                }\n                            });\n                        },\n                        onSubmit: function () {\n\n                            $(element).colpickHide();\n                        }\n\n                    });\n\n                });\n\n            }\n        };\n        // return end\n\n    };\n\n    /**\n      * lwPopup Directive.\n      *\n      * For apply jquery expander property on attribute\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function lwPopover() {\n\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                $(element).popover({\n                    html: true,\n                    trigger: 'focus',\n                    content: function () {\n                        return attrs.message;\n                    }\n                });\n            }\n        };\n    };\n\n\n    function lwEditor(__Utils, $q) {\n\n\n        return {\n            require: '?ngModel',\n            scope: {\n                'options': '='\n            },\n            link: function (scope, element, attrs, ngModel) {\n\n                var domElement = angular.element(element)[0];\n\n                var ckConfig = _.assign({\n                    filebrowserImageBrowseUrl: window.__appImmutables.ckeditor.filebrowserImageBrowseUrl,\n                    filebrowserImageUploadUrl: window.__appImmutables.ckeditor.filebrowserImageUploadUrl,\n                    filebrowserBrowseUrl: window.__appImmutables.ckeditor.filebrowserBrowseUrl,\n                    filebrowserUploadUrl: window.__appImmutables.ckeditor.filebrowserUploadUrl,\n                    // Define the toolbar: http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_toolbar\n                    // The full preset from CDN which we used as a base provides more features than we need.\n                    // Also by default it comes with a 3-line toolbar. Here we put all buttons in a single row.\n                    toolbar: [\n                        {\n                            name: 'styles',\n                            items: ['Format', 'Font', 'FontSize']\n                        },\n                        {\n                            name: 'basicstyles',\n                            items: ['Bold', 'Italic', 'Underline', 'Strike', 'RemoveFormat', 'CopyFormatting']\n                        },\n                        {\n                            name: 'colors',\n                            items: ['TextColor', 'BGColor']\n\n                        },\n                        {\n                            name: 'align',\n                            items: ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']\n                        },\n                        {\n                            name: 'links',\n                            items: ['Link', 'Unlink', 'CodeSnippet', 'Embed']\n                        },\n                        {\n                            name: 'paragraph',\n                            items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote']\n                        },\n                        {\n                            name: 'insert',\n                            items: ['Image', 'Table']\n                        },\n                        {\n                            name: 'editing',\n                            items: ['Scayt']\n                        },\n                        {\n                            name: 'document',\n                            items: ['Print']\n                        },\n                        {\n                            name: 'clipboard',\n                            items: ['PasteFromWord', '-', 'Undo', 'Redo']\n                        },\n                        {\n                            name: 'document',\n                            items: ['Source']\n                        },\n                        {\n                            name: 'tools',\n                            items: ['Maximize']\n                        }\n                    ],\n                    // Since we define all configuration options here, let's instruct CKEditor to not load config.js which it does by default.\n                    // One HTTP request less will result in a faster startup time.\n                    // For more information check http://docs.ckeditor.com/ckeditor4/docs/#!/api/CKEDITOR.config-cfg-customConfig\n                    customConfig: '',\n                    // Sometimes applications that convert HTML to PDF prefer setting image width through attributes instead of CSS styles.\n                    // For more information check:\n                    //  - About Advanced Content Filter: http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_advanced_content_filter\n                    //  - About Disallowed Content: http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_disallowed_content\n                    //  - About Allowed Content: http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_allowed_content_rules\n                    // disallowedContent: 'img{width,height,float}',\n                    // extraAllowedContent: 'img[width,height,align]',\n                    extraAllowedContent: 'iframe[*]',\n                    // Enabling extra plugins, available in the full-all preset: http://ckeditor.com/presets-all\n                    //extraPlugins: 'tableresize,uploadimage,uploadfile',\n                    extraPlugins: 'colorbutton,font,justify,print,tableresize,embed,autoembed,widget,image2,uploadimage,uploadfile,pastefromword,liststyle,codesnippet,embed,autoembed,autogrow',\n                    /*********************** File management support ***********************/\n                    // In order to turn on support for file uploads, CKEditor has to be configured to use some server side\n                    // solution with file upload/management capabilities, like for example CKFinder.\n                    // For more information see http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_ckfinder_integration\n                    // Uncomment and correct these lines after you setup your local CKFinder instance.\n                    // filebrowserBrowseUrl: 'http://example.com/ckfinder/ckfinder.html',\n                    // filebrowserUploadUrl: 'http://example.com/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',\n                    /*********************** File management support ***********************/\n                    // Make the editing area bigger than default.\n                    // height: 800,\n                    // width : 800,\t\t\t\t\t\n                    autoGrow_minHeight: 600,\n                    // autoGrow_maxHeight : 1000,\n                    autoGrow_onStartup: true,\n                    // enterMode : CKEDITOR.ENTER_BR,\n                    // fullPage: true,\n                    autoGrow_bottomSpace: 50,\n                    // readOnly :true,\n                    // An array of stylesheets to style the WYSIWYG area.\n                    // Note: it is recommended to keep your own styles in a separate file in order to make future updates painless.\n                    contentsCss: [\n                        // 'https://cdn.ckeditor.com/4.8.0/full-all/contents.css',  \n                        'dist/libs/document-editor/document-editor.css',\n                        'dist/libs/ckeditor/skins/moono-lisa/editor.css',\n                    ],\n                    // This is optional, but will let us define multiple different styles for multiple editors using the same CSS file.\n\n                    embed_provider: '//ckeditor.iframe.ly/api/oembed?url={url}&callback={callback}',\n\n                    bodyClass: 'document-editor',\n                    // Reduce the list of block elements listed in the Format dropdown to the most commonly used.\n                    format_tags: 'p;h1;h2;h3;pre',\n                    // Simplify the Image and Link dialog windows. The \"Advanced\" tab is not needed in most cases.\n                    removeDialogTabs: 'image:advanced;link:advanced',\n                    removePlugins: 'image,resize',\n                    // Define the list of styles which should be available in the Styles dropdown list.\n                    // If the \"class\" attribute is used to style an element, make sure to define the style for the class in \"mystyles.css\"\n                    // (and on your website so that it rendered in the same way).\n                    // Note: by default CKEditor looks for styles.js file. Defining stylesSet inline (as below) stops CKEditor from loading\n                    // that file, which means one HTTP request less (and a faster startup).\n                    // For more information see http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_styles\n                    stylesSet: [\n                        /* Inline Styles */\n                        { name: 'Marker', element: 'span', attributes: { 'class': 'marker' } },\n                        { name: 'Cited Work', element: 'cite' },\n                        { name: 'Inline Quotation', element: 'q' },\n                        /* Object Styles */\n                        {\n                            name: 'Special Container',\n                            element: 'div',\n                            styles: {\n                                padding: '5px 10px',\n                                background: '#eee',\n                                border: '1px solid #ccc'\n                            }\n                        },\n                        {\n                            name: 'Compact table',\n                            element: 'table',\n                            attributes: {\n                                cellpadding: '5',\n                                cellspacing: '0',\n                                border: '1',\n                                bordercolor: '#ccc'\n                            },\n                            styles: {\n                                'border-collapse': 'collapse'\n                            }\n                        },\n                        { name: 'Borderless Table', element: 'table', styles: { 'border-style': 'hidden', 'background-color': '#E6E6FA' } },\n                        { name: 'Square Bulleted List', element: 'ul', styles: { 'list-style-type': 'square' } }\n                    ]\n                }, scope.options);\n\n                var ckElement = CKEDITOR.replace(domElement, ckConfig);\n\n                if (!_.isNull(ngModel.$modelValue)) {\n                    ckElement.setData(ngModel.$modelValue);\n                }\n\n                ckElement.on(\"change\", function (event) {\n                    scope.$apply(function () {\n                        if (!_.trim($(ckElement.getData()).text())) {\n                            ngModel.$setViewValue('');\n                        } else {\n                            ngModel.$setViewValue(ckElement.getData());\n                        }\n                    });\n                });\n\n                ckElement.on('pasteState', function () {\n                    scope.$apply(function () {\n                        if (!_.trim($(ckElement.getData()).text())) {\n                            ngModel.$setViewValue('');\n                        } else {\n                            ngModel.$setViewValue(ckElement.getData());\n                        }\n                    });\n                });\n\n                ckElement.on(\"instanceReady\", function (event) {\n                    if (!_.trim($(ckElement.getData()).text())) {\n                        ckElement.setData('');\n                    } else {\n                        ckElement.setData(ngModel.$modelValue);\n                    }\n                });\n            }\n        };\n\n    };\n\n})();","(function() {\n'use strict';\n\n\tangular.module('app.form', [])\n\t  \t.directive(\"lwFormSelectizeField\", [ \n            '__Form', lwFormSelectizeField\n        ])\n        .directive(\"lwFormCheckboxField\", [ \n            '__Form', lwFormCheckboxField\n        ])\n        .directive(\"lwRecaptcha\", lwRecaptcha)\n        .directive('lwSelectAllCheckbox', function () {\n            return {\n                replace: true,\n                restrict: 'E',\n                scope: {\n                    checkboxes: '=',\n                    allselected: '=allSelected',\n                    allclear: '=allClear'\n                },\n                templateUrl:'lw-select-all-checkbox-field.ngtemplate',\n                link: function ($scope, $element) {\n\n                    $scope.masterChange = function () {\n                        if ($scope.master) {\n                            angular.forEach($scope.checkboxes, function (cb, index) {\n                                cb.isSelected = true;\n                            });\n                        } else {\n                            angular.forEach($scope.checkboxes, function (cb, index) {\n                                cb.isSelected = false;\n                            });\n                        }\n                    };\n\n                    $scope.$watch('checkboxes', function () {\n                        var allSet = true,\n                            allClear = true;\n                        angular.forEach($scope.checkboxes, function (cb, index) {\n                            if (cb.isSelected) {\n                                allClear = false;\n                            } else {\n                                allSet = false;\n                            }\n                        });\n\n                        if ($scope.allselected !== undefined) {\n                            $scope.allselected = allSet;\n                        }\n                        if ($scope.allclear !== undefined) {\n                            $scope.allclear = allClear;\n                        }\n\n                        $element.prop('indeterminate', false);\n                        if (allSet) {\n                            $scope.master = true;\n                        } else if (allClear) {\n                            $scope.master = false;\n                        } else {\n                            $scope.master = false;\n                            $element.prop('indeterminate', true);\n                        }\n\n                    }, true);\n                }\n            };\n        })\n        /**\n          * lwFormRadioField Directive.\n          * \n          * Form Field Radio Directive -\n          * App Level Customise Directive\n          *\n          * @inject __Form\n          *\n          * @return void\n          *-------------------------------------------------------- */\n\n        .directive(\"lwFormRadioField\", [\n            '__Form',\n            function ( __Form ) {\n\n              return {\n\n                restrict    : 'E',\n                replace     : true,\n                transclude  : true,\n                scope       : {\n                    fieldFor : '@'\n                },\n                templateUrl     : 'lw-form-radio-field.ngtemplate',\n                link            : function(scope, elem, attrs, transclude) {\n\n                    if(elem.hasClass('lw-remove-transclude-tag')) {\n                        elem.find('ng-transclude').children().unwrap();\n                    }\n\n                    var formData    = elem.parents('form.lw-ng-form')\n                                        .data('$formController'),\n                    inputElement    = elem.find('.lw-form-field ');\n\n                    //inputElement.prop('id', scope.fieldFor);\n\n                    scope.formField                 = {};\n                    scope.formField[scope.fieldFor] = attrs;\n\n                    scope.lwFormData = { formCtrl:formData };\n\n                    // get validation message\n                    scope.getValidationMsg = function( key, labelName ) {\n\n                        return __Form.getMsg(key, labelName);\n\n                    };\n\n                }\n\n                }\n\n            }\n        ])\n    \n    /**\n     * lwFormSelectizeField Directive.\n     * \n     * App level customise directive for angular selectize as form field\n     *\n     * @inject __Form\n     *\n     * @return void\n     *-------------------------------------------------------- */\n\n    function lwFormSelectizeField(__Form) {\n\n        return {\n\n            restrict    : 'E',\n            replace     : true,\n            transclude  : true,\n            scope       : {\n                fieldFor : '@'\n            },\n            templateUrl : 'lw-form-selectize.ngtemplate',\n            link        : function(scope, elem, attrs, transclude) {\n\n                var formData        = elem.parents('form.lw-ng-form')\n                                      .data('$formController'),\n                    selectElement   = elem.find('.lw-form-field');\n\n                selectElement.prop('id', scope.fieldFor);\n              \n                scope.formField                 = {};\n                scope.formField[scope.fieldFor] = attrs;\n\n                scope.lwFormData = { formCtrl : formData };\n\n                // get validation message\n                scope.getValidationMsg = function(key, labelName) {\n\n                    return __Form.getMsg(key, labelName);\n\n                };\n\n            }\n\n        };\n\n    };\n\n    /**\n      * Custom directive for bootstrap-material-datetimepicker\n      *\n      * @return void\n      *---------------------------------------------------------------- */\n    \n    function lwRecaptcha() {\n    \t\n    \t return {\n                restrict: 'AE',\n                scope   : {\n                    sitekey : '='\n                },\n                require : 'ngModel',\n                link : function(scope, elm, attrs, ngModel) {\n                    var id;\n                    ngModel.$validators.captcha = function(modelValue, ViewValue) {\n                        // if the viewvalue is empty, there is no response yet,\n                        // so we need to raise an error.\n                        return !!ViewValue;\n                    };\n \n                    function update(response) {\n                        ngModel.$setViewValue(response);\n                        ngModel.$render();\n                    }\n                    \n                    function expired() {\n                        grecaptcha.reset(id);\n                        ngModel.$setViewValue('');\n                        ngModel.$render();\n                        // do an apply to make sure the  empty response is \n                        // proaganded into your models/view.\n                        // not really needed in most cases tough! so commented by default\n                        // scope.$apply();\n                    }\n\n                    function iscaptchaReady() {\n                        if (typeof grecaptcha !== \"object\") {\n                            // api not yet ready, retry in a while\n                            return setTimeout(iscaptchaReady, 0);\n                        }\n                        id = grecaptcha.render(\n                            elm[0], {\n                                // put your own sitekey in here, otherwise it will not\n                                // function.\n                                \"sitekey\": attrs.sitekey,\n                                callback: update,\n                                \"expired-callback\": expired\n                            }\n                        );\n                    }\n                    iscaptchaReady();\n                }\n            };\n\n    }\n\n    /**\n     * lwFormCheckboxField Directive.\n     * \n     * App level customise directive for checkbox form field\n     *\n     * @inject __Form\n     *\n     * @return void\n     *-------------------------------------------------------- */\n\n    function lwFormCheckboxField(__Form) {\n\n        return {\n\n            restrict    : 'E',\n            replace     : true,\n            transclude  : true,\n            scope       : {\n                fieldFor : '@'\n            },\n            templateUrl : 'lw-form-checkbox-field.ngtemplate',\n            link        : function(scope, elem, attrs, transclude) {\n\n                var formData        = elem.parents('form.lw-ng-form')\n                                      .data('$formController'),\n                    selectElement   = elem.find('.lw-form-field');\n\n                selectElement.prop('id', scope.fieldFor);\n              \n                scope.formField                 = {};\n                scope.formField[scope.fieldFor] = attrs;\n\n                scope.lwFormData = { formCtrl : formData };\n\n                // get validation message\n                scope.getValidationMsg = function(key, labelName) {\n\n                    return __Form.getMsg(key, labelName);\n\n                };\n\n            }\n\n        };\n\n    };\n\n    \n})(); ","\"use strict\";\n// App Global Resources\n\n// check if browser is ie - http://hsrtech.com/psd-to-html/conditional-comments-ie11/\nvar isInternetExplorer = false;\nvar ua = window.navigator.userAgent;\nvar oldIE = ua.indexOf('MSIE ');\nvar newIE = ua.indexOf('Trident/');\n\nif ((oldIE > -1) || (newIE > -1)) {\n    isInternetExplorer = true;\n}\n\n// Promise Polyfill for IE - https://github.com/taylorhakes/promise-polyfill\nif(isInternetExplorer) {\n\n\t!function(t){function e(){}function n(t,e){return function(){t.apply(e,arguments)}}function o(t){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof t)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(t,this)}function r(t,e){for(;3===t._state;)t=t._value;return 0===t._state?void t._deferreds.push(e):(t._handled=!0,void a(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?i:f)(e.promise,t._value);var o;try{o=n(t._value)}catch(r){return void f(e.promise,r)}i(e.promise,o)}))}function i(t,e){try{if(e===t)throw new TypeError(\"A promise cannot be resolved with itself.\");if(e&&(\"object\"==typeof e||\"function\"==typeof e)){var r=e.then;if(e instanceof o)return t._state=3,t._value=e,void u(t);if(\"function\"==typeof r)return void s(n(r,e),t)}t._state=1,t._value=e,u(t)}catch(i){f(t,i)}}function f(t,e){t._state=2,t._value=e,u(t)}function u(t){2===t._state&&0===t._deferreds.length&&a(function(){t._handled||d(t._value)});for(var e=0,n=t._deferreds.length;n>e;e++)r(t,t._deferreds[e]);t._deferreds=null}function c(t,e,n){this.onFulfilled=\"function\"==typeof t?t:null,this.onRejected=\"function\"==typeof e?e:null,this.promise=n}function s(t,e){var n=!1;try{t(function(t){n||(n=!0,i(e,t))},function(t){n||(n=!0,f(e,t))})}catch(o){if(n)return;n=!0,f(e,o)}}var l=setTimeout,a=\"function\"==typeof setImmediate&&setImmediate||function(t){l(t,0)},d=function(t){\"undefined\"!=typeof console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",t)};o.prototype[\"catch\"]=function(t){return this.then(null,t)},o.prototype.then=function(t,n){var o=new this.constructor(e);return r(this,new c(t,n,o)),o},o.all=function(t){var e=Array.prototype.slice.call(t);return new o(function(t,n){function o(i,f){try{if(f&&(\"object\"==typeof f||\"function\"==typeof f)){var u=f.then;if(\"function\"==typeof u)return void u.call(f,function(t){o(i,t)},n)}e[i]=f,0===--r&&t(e)}catch(c){n(c)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},o.resolve=function(t){return t&&\"object\"==typeof t&&t.constructor===o?t:new o(function(e){e(t)})},o.reject=function(t){return new o(function(e,n){n(t)})},o.race=function(t){return new o(function(e,n){for(var o=0,r=t.length;r>o;o++)t[o].then(e,n)})},o._setImmediateFn=function(t){a=t},o._setUnhandledRejectionFn=function(t){d=t},\"undefined\"!=typeof module&&module.exports?module.exports=o:t.Promise||(t.Promise=o)}(this);\n\n}\n\n// a container to hold underscore template data\n_.templateSettings.variable = \"__tData\";\n\n_.assign(__globals, {\n\n      authConfig  : {\n        redirects   : {\n          \tguestOnly     : 'dashboard',\n          \t// authorized    : 'login',\n          \taccessDenied  : 'unauthorized'\n        }\n      },\n\n/*      dataStore : {\n        persist:false\n      },*/\n\n      getScrollOffsets : function() {\n            var doc = document, w = window;\n            var x, y, docEl;\n            \n            if ( typeof w.pageYOffset === 'number' ) {\n                x = w.pageXOffset;\n                y = w.pageYOffset;\n            } else {\n                docEl = (doc.compatMode && doc.compatMode === 'CSS1Compat')?\n                        doc.documentElement: doc.body;\n                x = docEl.scrollLeft;\n                y = docEl.scrollTop;\n            }\n            return {x:x, y:y};\n        },\n\n        getAuthorizationToken : function() {\n            return window.__appImmutables.auth_info.authorization_token;\n        },\n\n\n        getAppImmutables: function(immutableID) {\n\n            if (immutableID) {\n                return window.__appImmutables[immutableID];\n            } else {\n                return window.__appImmutables;\n            }\n        },\n\n        getAppJSItem: function(key) {\n\n            return window[key];\n        },\n\n        getJSString : function(stringID) {\n\n            var messages = this.getAppImmutables('messages');\n            return messages.js_string[stringID];\n\n        },\n\n        getReplacedString : function(element, replaceKey, replaceValue) {\n\n            return element.attr('data-message')\n                    .replace(replaceKey , '<strong>'+unescape(replaceValue)+'</strong>');\n\n        },\n\n        /**\n          * check if user logged in\n          *\n          * @return bool\n          *---------------------------------------------------------------- */\n\n        isLoggedIn : function() {\n            return window.__appImmutables.auth_info.authorized;\n        },\n\n        // Check is Numeric vlaue or pure number\n        isNumeric: function(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        },\n\n        /**\n          * Show action confirmation\n          *\n          * @param object options\n          * @param function callback\n          * @param function closeCallback\n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        showConfirmation : function(options, callback, closeCallback) {\n\n            var defaultOptions       = {\n                title              : 'Are you sure?',\n                showCancelButton   : true,\n                cancelButtonText   : 'Cancel',\n                //closeOnConfirm     : false,\n           //     showCancelButton   : true,\n                allowEscapeKey     : false,\n  \t\t\t\tallowOutsideClick  : false,\n                confirmButtonColor :  \"#c9302c\",\n                confirmButtonClass : 'btn-success',\n                onOpen: function() {\n                    $('html').addClass('lw-disable-scroll');\n                },\n                onClose: function() {\n                    $('html').removeClass('lw-disable-scroll');\n                }\n            };\n\n            // Check if callback exist\n            if (callback && _.isFunction(callback)) {\n\n                _.assign(defaultOptions, options);\n\n                swal.fire(defaultOptions).then(function(result) {\n\t\t\t\t    // handle Confirm button click\n\t\t\t\t    // result is an optional parameter, needed for modals with input\n\t\t\t\t    if (result.value) {\n                        return callback.call(this);\n                    }\n\n\t\t\t\t  }, function(dismiss) {\n\n\t\t\t\t    \t// dismiss can be 'cancel', 'overlay', 'close', 'timer'\n                        if (closeCallback && _.isFunction(closeCallback)) {\n                            return closeCallback.call( this, dismiss );\n                        }\n\n\t\t\t\t  });\n\n            } else {\n\n                // show only simple confirmation\n                swal.fire(options.title, options.text, options.type);\n            }\n\n        },\n\n        getSelectizeOptions : function (options) {\n\n            this.defaultOptions = {  \n                maxItems        : 1,\n                valueField      : 'id',\n                labelField      : 'name',\n                searchField     : ['name'],\n                onInitialize    : function(selectize) {\n\n\t\t\t\t\tvar currentValue = selectize.getValue();\n\n\t\t\t\t\tif (_.isEmpty(currentValue) === false &&\n\t\t\t\t\t    (_.isArray(currentValue) === false &&\n\t\t\t\t\t        _.isObject(currentValue) === false &&\n\t\t\t\t\t        _.isString(currentValue) === true)) {\n\t\t\t\t\t   \n\t\t\t\t\t        if (_.includes(currentValue, ',')) {\n\n\t\t\t\t\t            var currentValues = currentValue.split(\",\");\n\t\t\t\t\t           \n\t\t\t\t\t            for(var a in currentValues) {\n\t\t\t\t\t               \n\t\t\t\t\t                currentValues[a] = (__globals.isNumeric(currentValues[a])) ? Number(currentValues[a]) : currentValues[a];\n\t\t\t\t\t            }\n\n\t\t\t\t\t            selectize.setValue(currentValues);\n\n\t\t\t\t\t        } else {\n\n\t\t\t\t\t            if (__globals.isNumeric(currentValue)) {\n\n\t\t\t\t\t                selectize.setValue(Number(currentValue));\n\n\t\t\t\t\t            } else {\n\n\t\t\t\t\t                selectize.setValue(currentValue);\n\t\t\t\t\t            }\n\t\t\t\t\t        }\n\t\t\t\t\t    }\n\t\t\t\t\t}\n            };\n\n            return _.assign(this.defaultOptions, options);\n        },\n\n        /**\n         * Check if current app is Public or manage app\n         *\n         *-------------------------------------------------------- */\n        isPublicApp : function() {\n\n            return window.__appImmutables['publicApp'];\n        },\n\t\t/**\n\t     * slug text\n\t     *\n\t     *-------------------------------------------------------- */\n\t    slug : function(str) {\n\n\t\t\tvar $slug   = '';\n\t\t    var trimmed = $.trim(str);\n\t\t    \t$slug = trimmed.replace(/[^a-z0-9-]/gi, '-').\n\t\t    \treplace(/-+/g, '-').\n\t\t    \treplace(/^-|-$/g, '');\n\t\t    return $slug.toLowerCase();\n\t\t},\n\n\t\t/**\n\t      * get config items\n\t      *\n\t      * @return bool\n\t      *---------------------------------------------------------------- */\n\n\t    configItem : function(key) {\n\t        return window.__appImmutables.config[key];\n\t    },\n\n\t    /**\n\t     * Generate key vlaue page formate for\n\t     *\n\t     * @param array $data\n\t     *-------------------------------------------------------- */\n\n\t     generateKeyValueOption : function(configKey) {\n\n\t\t\tvar items = window.__appImmutables.config[configKey];\n\t        var option   = [];\n\n\t      _.forEach(items, function(value, key) {\n\n            option.push({\n                id : parseInt(key),\n                name : value\n\t        });\n\n\t      });\n\n\t      return option;\n\t     },\n\n\t\t/**\n\t     * Generate key vlaue page formate for\n\t     *\n\t     * @param array $data\n\t     *-------------------------------------------------------- */\n\n\t     generateValueAsKeyOption : function(items) {\n\n\t        var option   = [];\n\n\t      _.forEach(items, function(value, key) {\n\n            option.push({\n                id   : value,\n                name : value\n\t        });\n\n\t      });\n\n\t      return option;\n\t     },\n\n\t   /**\n\t     * Generate key value option for items\n\t     *\n\t     * @param array $items\n\t     *-------------------------------------------------------- */\n\n\t     generateKeyValueItems : function(items) {\n\n\t\t\tvar option   = [];\n\n\t\t\t_.forEach(items, function(value, key) {\n\n            option.push({\n                id : parseInt(key),\n                name : value\n\t        });\n\n\t      });\n\n\t      return option;\n\t     },\n        /**\n         * Redirect browser\n         *\n         * @param array $url\n         *-------------------------------------------------------- */\n\n         showProcessingDialog : function(url) {\n\n            $('html').addClass('lw-has-disabled-block');\n            $('.lw-disabling-block').addClass('lw-disabled-block lw-has-processing-window');\n         },\n\n        /**\n         * Redirect browser\n         *\n         * @param array $url\n         *-------------------------------------------------------- */\n\n         hideProcessingDialog : function(url) {\n\n            $('html').removeClass('lw-has-disabled-block');\n            $('.lw-disabling-block').removeClass('lw-disabled-block lw-has-processing-window');\n         },\n\n        /**\n         * Show Button Loader\n         *\n         * @param array $url\n         *-------------------------------------------------------- */\n\n         showButtonLoader : function(url) {\n\n            $('.lw-btn-loading').append(' <span class=\"fa fa-refresh fa-spin\"></span>').prop(\"disabled\", true);\n         },\n\n        /**\n         * Hide Button Loader\n         *\n         * @param array $url\n         *-------------------------------------------------------- */\n\n         hideButtonLoader : function(url) {\n\n            $('.lw-btn-loading span').removeClass('fa fa-refresh fa-spin');\n            $('.lw-btn-loading').prop(\"disabled\", false);\n         },\n\n        /**\n         * Redirect browser\n         *\n         * @param array $url\n         *-------------------------------------------------------- */\n\n         redirectBrowser : function(url) {\n\n            __globals.showProcessingDialog();\n\n            window.location = url;\n         },\n\n        setCookie : function(cname, cvalue, exdays) {\n            window.localStorage.setItem(cname, cvalue);\n        },\n\n        getCookie : function(cname) {\n\n            var name = cname + \"=\";\n\n            var ca = document.cookie.split(';');\n\n            for( var i = 0; i < ca.length; i++) {\n\n                var c = ca[i];\n\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1);\n                }\n\n                if (c.indexOf(name) == 0) {\n                    return c.substring(name.length, c.length);\n                }\n            }\n\n            var getItem =  window.localStorage.getItem(cname);\n           \n            if (getItem === 'undefined') {\n                \n                window.localStorage.removeItem(cname);\n\n                return '';\n            }\n\n            if (_.isNull(getItem)) {\n\n                localStorage.removeItem(cname);\n\n                return false;\n            }\n\n            return localStorage.getItem(cname);\n        }\n\n});\n\n// $.trumbowyg.svgPath = '../__FRONTFIELD/node_modules/trumbowyg/dist/ui/icons.svg';\n\n//Datatables Defaults\n $.extend( $.fn.dataTable.defaults, {\n    \"serverSide\"      : true,\n    \"searchDelay\"     : 1800,\n    \"iCookieDuration\" : 60,\n    \"paging\"          : true,\n    \"processing\"      : true,\n    \"responsive\"      : true,\n   // \"pageLength\"      : 1,\n    \"destroy\"         : true,\n    \"retrieve\"        : true,\n    \"lengthChange\"    : true,\n    \"language\"        : {\n                          \"emptyTable\": \"There are no records to display.\"\n                        },\n    \"searching\"       : false,\n    \"ajax\"            : {\n      // any additional data to send\n      \"data\"          : function ( additionalData ) {\n        additionalData.page = (additionalData.start / additionalData.length) + 1;\n      }\n    }\n  });","(function() {\n'use strict';\n\n  angular.module('app.fileUploader', []).\n    service(\"lwFileUploader\", [\n        '$rootScope','__Utils', '__DataStore',\n        'appServices', 'appNotify','$q', lwFileUploader ]);\n\n\n  /**\n     * lwFileUploader service.\n     *\n     * fileUploader\n     *\n     * @inject $rootScope\n     * @inject FileUploader\n     * @inject __DataStore\n     * @inject appServices\n     * @inject appNotify\n     *\n     * @return object\n     *-------------------------------------------------------- */\n\n    function lwFileUploader($rootScope, __Utils,\n        __DataStore, appServices, appNotify, $q) {\n\n        var uploader;\n\n        /**\n        * Get temp uploaded files\n        *\n        * @inject scope\n        * @inject option\n        * @inject callback\n        *\n        * @return void\n        *-----------------------------------------------------------------------*/\n\n        this.upload = function(option, callback)\n        {\n        \tvar progress = 0,\n                message = '',\n                reaction;\n\n            $('#lwFileupload').fileupload({\n                url: option.url,\n                dataType: 'json',\n                headers     : {\n                    'X-XSRF-TOKEN': __Utils.getXSRFToken(),\n                    \"Authorization\" : 'Bearer ' + __globals.getCookie('auth_access_token')\n                },\n                stop: function (e, data) {\n                    //callback.call(this, true);\t\n\t\t\t\t\t$rootScope.$emit('lw-loader-event-stop', true);\n                    $(\"#lw-spinner-widget\").hide();\n\t\t\t\t\t$(\"#lwFileupload\").attr(\"disabled\", false);\n\n                    if (reaction == 1) {\n                        appNotify.success(message, {sticky : false});\n                    } else if (reaction != 1) {\n                        appNotify.error(message, {sticky : false});\n                    }\n                    \n                },\n                done: function (e, data) {\n\n                    message = data.result.data.message;\n                    reaction = data.result.reaction;\n\t\t\t\t\t\n                    callback.call(this, data);\n                },\n                progressall: function (e, data) {\n\n                    progress = parseInt(data.loaded / data.total * 100, 10);\n\n\t\t\t\t\t//$rootScope.$emit('lw-loader-event-start', true);\n                   \n                    /*if (progress < 99) {\n                        appNotify.info('uploading...'+progress+'%', {sticky : true});\n                    } else {\n                    \tappNotify.info('uploading...'+progress+'%', {sticky : false});\n                    }*/\n                },\n\t\t\t\tstart : function (e, data) {\n\t\t\t\t\t\n\t\t\t\t\t$rootScope.$emit('lw-loader-event-start', true);\n\t\t\t\t   \t$(\"#lw-spinner-widget\").show();\n\t\t\t\t\t$(\"#lwFileupload\").attr(\"disabled\", true);\n\t\t\t\t}\n            });\n\n        };\n\n        /*\n        Get Login attempts\n        -----------------------------------------------------------------*/\n        this.mediaDataService = function(url) {\n\n            //create a differed object\n            var defferedObject = $q.defer();\n\n            __DataStore.fetch(url, { 'fresh' : true } )\n                .success(function(responseData) {\n\n                appServices.processResponse(responseData, null, function(reactionCode) {\n\n                    //this method calls when the require\n                    //work has completed successfully\n                    //and results are returned to client\n                    defferedObject.resolve(responseData);\n\n                });\n\n            });\n\n           //return promise to caller\n           return defferedObject.promise;\n        };\n\n\n        /**\n        * Get temp uploaded files\n        *\n        * @inject scope\n        * @inject option\n        * @inject callback\n        *\n        * @return void\n        *-----------------------------------------------------------------------*/\n\n        this.getTempUploadedFiles = function(scope, option, callback)\n        {\n            this.mediaDataService(option.url)\n                .then(function(responseData) {\n\n                scope.uploadedFile  = responseData.data.files;\n\n                callback.call(this, scope.uploadedFile);\n\n            });\n\n        };\n\n\n        /**\n        * Open temp uploaded Files dialog\n        *\n        * @inject scope\n        * @inject option\n        * @inject callback\n        *\n        * @return void\n        *-----------------------------------------------------------------------*/\n\n        this.openDialog = function(scope, option, callback)\n        {\n            appServices.showDialog(option, {\n                templateUrl : __globals.getTemplateURL(\n                    'media.uploaded-media'\n                )\n            }, function(promiseObj) {\n\n               callback.call(this, promiseObj);\n\n            });\n\n        };\n\n        /**\n        * Open temp uploaded Files dialog\n        *\n        * @inject scope\n        * @inject option\n        * @inject callback\n        *\n        * @return void\n        *-----------------------------------------------------------------------*/\n\n        this.openAttachmentDialog = function(scope, option, callback)\n        {\n            appServices.showDialog(option, {\n                templateUrl : __globals.getTemplateURL(\n                    'media.uploaded-attachment'\n                )\n            }, function(promiseObj) {\n\n               callback.call(this, promiseObj);\n\n            });\n\n        };\n\n\n    };\n\n})();"]}